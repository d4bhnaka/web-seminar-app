[{"/Users/mini/Projects/web-seminar-app/src/index.tsx":"1","/Users/mini/Projects/web-seminar-app/src/reportWebVitals.ts":"2","/Users/mini/Projects/web-seminar-app/src/App.tsx":"3","/Users/mini/Projects/web-seminar-app/src/lib/firebase.ts":"4","/Users/mini/Projects/web-seminar-app/src/screens/LoginScreen.tsx":"5","/Users/mini/Projects/web-seminar-app/src/screens/DashboardScreen.tsx":"6","/Users/mini/Projects/web-seminar-app/src/components/LoginForm.tsx":"7","/Users/mini/Projects/web-seminar-app/src/components/Auth.tsx":"8","/Users/mini/Projects/web-seminar-app/src/pages/index.tsx":"9","/Users/mini/Projects/web-seminar-app/src/components/UpdatePasswordForm.tsx":"10","/Users/mini/Projects/web-seminar-app/src/components/CurrentUser.tsx":"11"},{"size":500,"mtime":1607420767720,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607420767721,"results":"14","hashOfConfig":"13"},{"size":746,"mtime":1607682969873,"results":"15","hashOfConfig":"13"},{"size":637,"mtime":1607582227458,"results":"16","hashOfConfig":"13"},{"size":828,"mtime":1607682916128,"results":"17","hashOfConfig":"13"},{"size":1416,"mtime":1607583956174,"results":"18","hashOfConfig":"13"},{"size":2901,"mtime":1607682488454,"results":"19","hashOfConfig":"13"},{"size":358,"mtime":1607508347629,"results":"20","hashOfConfig":"21"},{"size":101,"mtime":1607590005280,"results":"22","hashOfConfig":"13"},{"size":3516,"mtime":1607682888219,"results":"23","hashOfConfig":"13"},{"size":1016,"mtime":1607683548535,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1secrrc",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x1frck",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/mini/Projects/web-seminar-app/src/index.tsx",[],["49","50"],"/Users/mini/Projects/web-seminar-app/src/reportWebVitals.ts",[],"/Users/mini/Projects/web-seminar-app/src/App.tsx",[],"/Users/mini/Projects/web-seminar-app/src/lib/firebase.ts",[],"/Users/mini/Projects/web-seminar-app/src/screens/LoginScreen.tsx",[],"/Users/mini/Projects/web-seminar-app/src/screens/DashboardScreen.tsx",[],"/Users/mini/Projects/web-seminar-app/src/components/LoginForm.tsx",[],"/Users/mini/Projects/web-seminar-app/src/components/Auth.tsx",[],"/Users/mini/Projects/web-seminar-app/src/pages/index.tsx",[],"/Users/mini/Projects/web-seminar-app/src/components/UpdatePasswordForm.tsx",["51"],"import React, { useState } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport firebase from \"../lib/firebase\";\n\ntype Props = {};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      // display: \"flex\",\n      // alignItems: \"center\",\n      \"& > *\": {\n        margin: theme.spacing(1.5),\n        // width: \"25ch\",\n      },\n    },\n  })\n);\n\ninterface State {\n  email: string;\n  password: string;\n  showPassword: boolean;\n}\n\nexport const UpdatePasswordForm: React.FC<Props> = () => {\n  const [state, setState] = useState<State>({\n    email: \"\",\n    password: \"\",\n    showPassword: false,\n  });\n\n  const classes = useStyles();\n\n  const handleChange = (prop: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setState({\n      ...state,\n      [prop]: event.target.value,\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setState({ ...state, showPassword: !state.showPassword });\n  };\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  // 新規ユーザの作成\n  const createAccount = async () => {\n    try {\n      const result = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(state.email, state.password);\n      // 成功時の処理\n      alert(`ユーザーの作成に成功しました😊 ${result.user?.email}`);\n    } catch (error) {\n      console.error(error);\n      // 失敗時の処理\n      alert(\n        \"ユーザーの作成に失敗しました！🚫すでに登録済みのメールアドレスです\"\n      );\n    }\n  };\n\n  const resetPassword = async () => {\n    try {\n      const result = await firebase.auth().sendPasswordResetEmail(state.email);\n      // 成功時の処理\n      alert(`パスワード再発行のリンクを送りました。メールをご確認ください。✉️`);\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n      // 失敗時の処理\n      alert(\"メールアドレスが正しくありません！🚫\");\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <FormControl fullWidth>\n        <InputLabel htmlFor=\"email\">メールアドレス</InputLabel>\n        <Input\n          id=\"email\"\n          value={state.email}\n          type=\"email\"\n          onChange={handleChange(\"email\")}\n        />\n      </FormControl>\n      <FormControl fullWidth>\n        <InputLabel htmlFor=\"password\">パスワード</InputLabel>\n        <Input\n          id=\"password\"\n          value={state.password}\n          type={state.showPassword ? \"text\" : \"password\"}\n          onChange={handleChange(\"password\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {state.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => resetPassword()}\n      >\n        パスワードのリセット\n      </Button>\n    </div>\n  );\n};\n","/Users/mini/Projects/web-seminar-app/src/components/CurrentUser.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":64,"column":9,"nodeType":"58","messageId":"59","endLine":64,"endColumn":22},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'createAccount' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]